{"mappings":"ACEA,MAAM,EAAa,KACjB,+BAA+B;AAC/B,IAAM,EAAY,SAAS,cAAc,CAAC,YAAY,KAAK,AAC3D,oBAAmB;AACnB,SAAS,cAAc,CAAC,YAAY,KAAK,CAAG,GAE5C,EAAqB,EACvB,EAGM,EAA2B,AAAC,IAChC,iDAAiD;AACjD,SAAS,cAAc,CAAC,mBAAmB,WAAW,CAAC,EACzD,EAGM,EAAuB,AAAC,IAC5B,iBAAiB;AACjB,IAAM,EAAM,SAAS,aAAa,CAAC,MACnC,mBAAkB;AAClB,EAAI,SAAS,CAAG,UAEhB,iBAAgB;AAChB,IAAM,EAAK,SAAS,aAAa,CAAC,KAClC,qBAAoB;AACpB,EAAG,SAAS,CAAG,CAEf,yBAAwB;AACxB,IAAM,EAAiB,SAAS,aAAa,CAAC,SAC9C,CAAA,EAAe,SAAS,CAAG,KAC3B,EAAe,gBAAgB,CAAC,QAAS,KACvC,gCAAgC;AAChC,IAAM,EAAe,EAAe,UAAU,CAC9C,EAAyB,EAEzB,gBAAe;AACf,IAAM,EAAY,EAAe,UAAU,CAErC,EAAO,EAAU,iBAAiB,CAAC,SAAS,AAClD,oCAAmC;AACnC,EAAU,WAAW,CAAG,IACxB,WAAU;AACV,IAAM,EAAK,SAAS,aAAa,CAAC,KAClC,CAAA,EAAG,SAAS,CAAG,CACf,eAAc;AACd,IAAM,EAAa,SAAS,aAAa,CAAC,SAC1C,CAAA,EAAW,SAAS,CAAG,KACvB,EAAW,gBAAgB,CAAC,QAAS,KACnC,+BAA+B;AAC/B,IAAM,EAAe,EAAW,UAAU,CAC1C,SAAS,cAAc,CAAC,iBAAiB,WAAW,CAAC,EAErD,UAAS;AACT,IAAM,EAAO,EAAW,UAAU,CAAC,UAAU,CAAC,SAAS,CACvD,EAAqB,EACvB,GAEA,6BAA6B;AAC7B,EAAU,WAAW,CAAC,GACtB,EAAU,WAAW,CAAC,GACtB,4BAA4B;AAC5B,SAAS,cAAc,CAAC,iBAAiB,WAAW,CAAC,EACvD,EAEA,yBAAwB;AACxB,IAAM,EAAe,SAAS,aAAa,CAAC,SAC5C,CAAA,EAAa,SAAS,CAAG,KACzB,EAAa,gBAAgB,CAAC,QAAS,KACrC,wBAAwB;AACxB,IAAM,EAAe,EAAa,UAAU,CAC5C,EAAyB,EAC3B,GAEA,mBAAmB;AACnB,EAAI,WAAW,CAAC,GAChB,EAAI,WAAW,CAAC,GAChB,EAAI,WAAW,CAAC,GAEhB,YAAY;AACZ,SAAS,cAAc,CAAC,mBAAmB,WAAW,CAAC,EACzD,EAEA,SAAS,cAAc,CAAC,cAAc,gBAAgB,CAAC,QAAS,IAAM,I,4D","sources":["<anon>","src/index.mjs"],"sourcesContent":["\nconst $761f97bf09d51d3e$var$onClickAdd = ()=>{\n    // id=\"add-text\"のinputタグの値を受け取る\n    const inputText = document.getElementById(\"add-text\").value;\n    // 受け取った後に入力欄を初期化する\n    document.getElementById(\"add-text\").value = \"\";\n    $761f97bf09d51d3e$var$createIncompleteList(inputText);\n};\n// 未完了リストから指定の要素を削除\nconst $761f97bf09d51d3e$var$deleteFromIncompleteList = (deleteTarget)=>{\n    // 更に１つ上の親タグ(ulタグのincomplete-list)からみて子タグ(div)を削除\n    document.getElementById(\"incomplete-list\").removeChild(deleteTarget);\n};\n// 未完了リストに追加する関数\nconst $761f97bf09d51d3e$var$createIncompleteList = (text)=>{\n    // [DOM追加]divタグ生成\n    const div = document.createElement(\"div\");\n    // divタグ内にclassを追加\n    div.className = \"list-row\";\n    // [DOM追加]liタグ生成\n    const li = document.createElement(\"li\");\n    // liタグにinputTextを挿入\n    li.innerText = text;\n    // [DOM追加]button(完了)タグ生成\n    const completeButton = document.createElement(\"button\");\n    completeButton.innerText = \"\\u5B8C\\u4E86\";\n    completeButton.addEventListener(\"click\", ()=>{\n        // 押された完了ボタンの親タグ(div)を未完了リストから削除\n        const deleteTarget = completeButton.parentNode;\n        $761f97bf09d51d3e$var$deleteFromIncompleteList(deleteTarget);\n        // 完了リストに追加する要素\n        const addTarget = completeButton.parentNode;\n        // TODO内のテキスト内容取得\n        const text = addTarget.firstElementChild.innerText;\n        // div以下(liとbutton)を初期化してdivタグだけにする\n        addTarget.textContent = null;\n        // liタグを生成\n        const li = document.createElement(\"li\");\n        li.innerText = text;\n        // buttonタグを生成\n        const backButton = document.createElement(\"button\");\n        backButton.innerText = \"\\u623B\\u3059\";\n        backButton.addEventListener(\"click\", ()=>{\n            // 押された戻すボタンの親タグ(div)を完了リストから削除\n            const deleteTarget = backButton.parentNode;\n            document.getElementById(\"complete-list\").removeChild(deleteTarget);\n            // テキスト取得\n            const text = backButton.parentNode.firstChild.innerText;\n            $761f97bf09d51d3e$var$createIncompleteList(text);\n        });\n        //divタグ(addTarget)の子要素に各要素を設定\n        addTarget.appendChild(li);\n        addTarget.appendChild(backButton);\n        // 完了リストにdivタグ(addTarget)を追加\n        document.getElementById(\"complete-list\").appendChild(addTarget);\n    });\n    // (DOM追加)button(削除)タグ生成\n    const deleteButton = document.createElement(\"button\");\n    deleteButton.innerText = \"\\u524A\\u9664\";\n    deleteButton.addEventListener(\"click\", ()=>{\n        // 押された削除ボタンの親タグ(div)を取得\n        const deleteTarget = deleteButton.parentNode;\n        $761f97bf09d51d3e$var$deleteFromIncompleteList(deleteTarget);\n    });\n    // divタグの子要素に各要素を設定\n    div.appendChild(li);\n    div.appendChild(completeButton);\n    div.appendChild(deleteButton);\n    // 未完了リストに追加\n    document.getElementById(\"incomplete-list\").appendChild(div);\n};\ndocument.getElementById(\"add-button\").addEventListener(\"click\", ()=>$761f97bf09d51d3e$var$onClickAdd());\n\n\n//# sourceMappingURL=index.404fb85a.js.map\n","import \"./styles.css\";\n\nconst onClickAdd = () => {\n  // id=\"add-text\"のinputタグの値を受け取る\n  const inputText = document.getElementById(\"add-text\").value;\n  // 受け取った後に入力欄を初期化する\n  document.getElementById(\"add-text\").value = \"\";\n\n  createIncompleteList(inputText);\n};\n\n// 未完了リストから指定の要素を削除\nconst deleteFromIncompleteList = (deleteTarget) => {\n  // 更に１つ上の親タグ(ulタグのincomplete-list)からみて子タグ(div)を削除\n  document.getElementById(\"incomplete-list\").removeChild(deleteTarget);\n};\n\n// 未完了リストに追加する関数\nconst createIncompleteList = (text) => {\n  // [DOM追加]divタグ生成\n  const div = document.createElement(\"div\");\n  // divタグ内にclassを追加\n  div.className = \"list-row\";\n\n  // [DOM追加]liタグ生成\n  const li = document.createElement(\"li\");\n  // liタグにinputTextを挿入\n  li.innerText = text;\n\n  // [DOM追加]button(完了)タグ生成\n  const completeButton = document.createElement(\"button\");\n  completeButton.innerText = \"完了\";\n  completeButton.addEventListener(\"click\", () => {\n    // 押された完了ボタンの親タグ(div)を未完了リストから削除\n    const deleteTarget = completeButton.parentNode;\n    deleteFromIncompleteList(deleteTarget);\n\n    // 完了リストに追加する要素\n    const addTarget = completeButton.parentNode;\n    // TODO内のテキスト内容取得\n    const text = addTarget.firstElementChild.innerText;\n    // div以下(liとbutton)を初期化してdivタグだけにする\n    addTarget.textContent = null;\n    // liタグを生成\n    const li = document.createElement(\"li\");\n    li.innerText = text;\n    // buttonタグを生成\n    const backButton = document.createElement(\"button\");\n    backButton.innerText = \"戻す\";\n    backButton.addEventListener(\"click\", () => {\n      // 押された戻すボタンの親タグ(div)を完了リストから削除\n      const deleteTarget = backButton.parentNode;\n      document.getElementById(\"complete-list\").removeChild(deleteTarget);\n\n      // テキスト取得\n      const text = backButton.parentNode.firstChild.innerText;\n      createIncompleteList(text);\n    })\n\n    //divタグ(addTarget)の子要素に各要素を設定\n    addTarget.appendChild(li);\n    addTarget.appendChild(backButton);\n    // 完了リストにdivタグ(addTarget)を追加\n    document.getElementById(\"complete-list\").appendChild(addTarget);\n  })\n\n  // (DOM追加)button(削除)タグ生成\n  const deleteButton = document.createElement(\"button\");\n  deleteButton.innerText = \"削除\";\n  deleteButton.addEventListener(\"click\", () => {\n    // 押された削除ボタンの親タグ(div)を取得\n    const deleteTarget = deleteButton.parentNode;\n    deleteFromIncompleteList(deleteTarget);\n  })\n\n  // divタグの子要素に各要素を設定\n  div.appendChild(li);\n  div.appendChild(completeButton);\n  div.appendChild(deleteButton);\n\n  // 未完了リストに追加\n  document.getElementById(\"incomplete-list\").appendChild(div);\n}\n\ndocument.getElementById(\"add-button\").addEventListener(\"click\", () => onClickAdd());"],"names":["$761f97bf09d51d3e$var$onClickAdd","inputText","document","getElementById","value","$761f97bf09d51d3e$var$createIncompleteList","$761f97bf09d51d3e$var$deleteFromIncompleteList","deleteTarget","removeChild","text","div","createElement","className","li","innerText","completeButton","addEventListener","parentNode","addTarget","firstElementChild","textContent","backButton","firstChild","appendChild","deleteButton"],"version":3,"file":"index.404fb85a.js.map"}